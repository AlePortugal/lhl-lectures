[{"/home/cpt-waffle/lhl/lectures/w07d02-Data-Fetching-And-Other-SideEffects/myapp/src/stories/index.stories.js":"1","/home/cpt-waffle/lhl/lectures/w07d02-Data-Fetching-And-Other-SideEffects/myapp/src/index.js":"2","/home/cpt-waffle/lhl/lectures/w07d02-Data-Fetching-And-Other-SideEffects/myapp/src/App.js":"3","/home/cpt-waffle/lhl/lectures/w07d02-Data-Fetching-And-Other-SideEffects/myapp/src/components/Meme/index.js":"4"},{"size":491,"mtime":1611163574632,"results":"5","hashOfConfig":"6"},{"size":433,"mtime":1611163119010,"results":"7","hashOfConfig":"8"},{"size":1460,"mtime":1611167729483,"results":"9","hashOfConfig":"8"},{"size":248,"mtime":1611166960548,"results":"10","hashOfConfig":"8"},{"filePath":"11","messages":"12","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1cquyiz",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1bpvm5o",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"/home/cpt-waffle/lhl/lectures/w07d02-Data-Fetching-And-Other-SideEffects/myapp/src/stories/index.stories.js",["22"],"/home/cpt-waffle/lhl/lectures/w07d02-Data-Fetching-And-Other-SideEffects/myapp/src/index.js",[],["23","24"],"/home/cpt-waffle/lhl/lectures/w07d02-Data-Fetching-And-Other-SideEffects/myapp/src/App.js",["25"],"// useEffect is a Hook just like useState\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Meme from './components/Meme'\n\nfunction App() {\n  const [number, setNumber] = useState(1);\n  const [average, setAverage] = useState(1);\n  const [memes, setMemes] = useState([]);\n  const [favMeme, setFavMeme] = useState({});\n\n  const handleNumber = () => {\n    setNumber(prev => prev + 1);\n    setAverage(number / 2)\n\n  }\n\n  // api/appointments\n  // api/days\n  // {appointments: [1,2,3,4]}\n  useEffect(() => {\n    //Promise.all\n    console.log(\"Hello??\")\n\n    Promise.all([\n        axios.get('/memes'), \n        axios.get('/favorite')\n      ]\n    ).then(res => {\n      const allMemes = [...res[0].data, res[1].data]\n      setMemes(allMemes);\n    })\n\n  }, [])\n// component did mount? document.onreadY?\n// component will mount?\n// component will update?\n\n// used case for []\n\n// i click buy on an item, the state adds it into the cart\n// use effect runs to calcuate how much money is total\n\n\n  // is array of parameters that will be watched\n  return (\n    <div className=\"App\">\n      <h1>Hello World!!s</h1>\n      <h2>Dislikes!{number}</h2>\n      <h3>Average{average}</h3>\n      <h2>MY FAVORITE MEME</h2>\n      <Meme name={favMeme.name} url={favMeme.url}/>\n      <button onClick={handleNumber}>Add One</button>\n      {memes.map(meme => <Meme name={meme.name} url={meme.url}/>)}\n    </div>\n  );\n}\n\nexport default App;\n","/home/cpt-waffle/lhl/lectures/w07d02-Data-Fetching-And-Other-SideEffects/myapp/src/components/Meme/index.js",["26"],"import React from 'react';\nimport './index.css'\n\n\nfunction Meme(props) {\n    console.log(\"MEME CONSOLE Line 6\")\n    return (\n    <div className=\"meme\">\n        <h2>{props.name}</h2>\n        <img src={props.url}/>\n    </div>)\n}\n\nexport default Meme;",{"ruleId":null,"fatal":true,"severity":2,"message":"27","line":14,"column":1},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":11,"column":19,"nodeType":"34","messageId":"35","endLine":11,"endColumn":29},{"ruleId":"36","severity":1,"message":"37","line":10,"column":9,"nodeType":"38","endLine":10,"endColumn":31},"Parsing error: Identifier 'storiesOf' has already been declared\n\n  12 | \n  13 | \n> 14 | storiesOf('Sample Test', module)\n     | ^\n  15 |     .add('Getting a Default Meme to Appear', () => <Meme/>)\n  16 |     .add('Empy Meme', () => <h1>Hello Universe</h1>)\n  17 |","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'setFavMeme' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]